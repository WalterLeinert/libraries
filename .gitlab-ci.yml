# This file is a template, and might need editing before it works on your project.
# Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/node/tags/
# image: localhost:5000/node-dev:latest
image: localhost:5000/node-dev:3

# When using dind, it's wise to use the overlayfs driver for
# improved performance.
variables:
  DOCKER_DRIVER: overlay2

before_script:
  - echo 'registry=http://server.fluxgate.de:4873/' >> ~/.npmrc
  - echo '//server.fluxgate.de:4873/:_authToken="PeTF/FIpWZ/96ffjQ/5lbBVfa8zj0HREo4YIU26Sgx0="' >> ~/.npmrc
  - docker info
  - npm install

# Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ce/ci/docker/using_docker_images.html#what-is-service
services:
  - docker:1.12.1-dind
  # - name: localhost:5000/libraries_mysql
  #   alias: libraries_mysql

# This folder is cached between builds
# http://docs.gitlab.com/ce/ci/yaml/README.html#cache
cache:
  paths:
  - node_modules/

stages:
  - lint
  - docker
  - build
  - test
  - deploy

lintJob:
  stage: lint
  script: gulp tslint

dockerJob:
  stage: docker
  variables:
    APP_ENV: "development"
  script:
  - docker-compose build
  # - sudo docker build -f .docker/docker-mysql.dockerfile -t libraries-mysql
  # - sudo docker run --rm -p "33306:3306" libraries-mysql

buildJob:
  stage: build
  variables:
    NODE_ENV: "local"
    APP_ENV: "development"
    CI_DEBUG_TRACE: "true"
  script:
  - docker-compose up -d
  - bash bin/rebuild.sh -o


testJob:
  stage: test
  script:
  - docker-compose up -d
  - cd client
  - ng e2e --no-serve

deployJob:
  stage: deploy
  script: echo "*** should deploy ***"