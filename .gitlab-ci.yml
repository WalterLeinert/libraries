# This file is a template, and might need editing before it works on your project.
# Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/node/tags/
# image: localhost:5000/node-dev:latest
image: localhost:5000/node-dev:4

variables:
  MYSQL_DATABASE: libraries
  MYSQL_ROOT_PASSWORD: "root"

before_script:
  - echo 'registry=http://server.fluxgate.de:4873/' >> ~/.npmrc
  - echo '//server.fluxgate.de:4873/:_authToken="PeTF/FIpWZ/96ffjQ/5lbBVfa8zj0HREo4YIU26Sgx0="' >> ~/.npmrc
  - npm install -g @tools/knex-importer
  - npm install

# Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ce/ci/docker/using_docker_images.html#what-is-service
services:
  - name: mysql
    alias: mysql

  # - name: localhost:5000/libraries_mysql
  #   alias: libraries_mysql

# This folder is cached between builds
# http://docs.gitlab.com/ce/ci/yaml/README.html#cache
cache:
  paths:
  - node_modules/

stages:
  - lint
  - build
  - test
  - deploy

lintJob:
  stage: lint
  script: gulp tslint

buildJob:
  stage: build
  variables:
    NODE_ENV: "ci"
    CI_DEBUG_TRACE: "false"
    CHROME_BIN: "/usr/bin/chromium-browser"
  script:
  # Test-DB erzeugen
  - knex-importer -r -c database/config/knexfile.ci.json -d database
  - bash bin/rebuild.sh -o


# testJob:
#   stage: test
#   script:
#   - docker-compose up -d
#   - cd client
#   - ng e2e --no-serve

# deployJob:
#   stage: deploy
#   script: echo "*** should deploy ***"