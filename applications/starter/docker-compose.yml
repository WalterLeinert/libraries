    # 1. Update config values (localhost --> mongo and localhost --> redis) in config.development.json
    # 2. Set APP_ENV environment variable to proper value in Dockerfile-redis (default is "development")
    #    export APP_ENV=development
    # 3. Run docker-compose build
    # 4. Run docker-compose up
    # 5. Live long and prosper

version: "2"

services:
    node:
      container_name: node-starter
      build:
        context: .
        dockerfile: .docker/node.dockerfile
      hostname: "starter-node"
      ports:
      - "8100:8100"
      links:
        - mysql:starter-mysql
      volumes:
        - ../../dist/starter-server/src/lib:/var/www/starter
        - ../../node_modules:/var/www/starter/node_modules
        - ../../dist/core:/var/www/starter/node_modules/@fluxgate/core
        - ../../dist/platform:/var/www/starter/node_modules/@fluxgate/platform
        - ../../dist/node:/var/www/starter/node_modules/@fluxgate/node
        - ../../dist/common:/var/www/starter/node_modules/@fluxgate/common
        - ../../dist/server:/var/www/starter/node_modules/@fluxgate/server
        - ../../dist/starter-common:/var/www/starter/node_modules/@fluxgate/starter-common
        - ../../dist/starter-server:/var/www/starter/node_modules/@fluxgate/starter-server
      working_dir: /var/www/starter/
      env_file:
        - ./.docker/env/app.${APP_ENV}.env
      networks:
        - starter-network

    mysql:
      container_name: mysql-starter
      build:
        context: .
        dockerfile: .docker/mysql.dockerfile
      hostname: "starter-mysql"
      ports:
      - "34306:3306"
      env_file:
        - ./.docker/env/mysql.${APP_ENV}.env
        - ./.docker/env/app.${APP_ENV}.env
      networks:
        - starter-network

networks:
    starter-network:
      driver: bridge